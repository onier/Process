<Process xmlns="">
    <TaskManager taskName="slave马达控制子流程">
        <tasks>
            <StartTask NextTaskID="slaveMotorCalibrationCheck" id="slave_motor_start_task"
                       name="slave_motor_start_task"/>

            <FakeTask NextTaskID="checkSlaveCalibrationGateway"
                      id="slaveMotorCalibrationCheck"
                      name="startCalibration" Text="slave是否启动校准">

                <map keyType="std::string" name="Values" valueType="std::string">
                    <item>
                        <key type="std::string" value="CheckMasterVisionResult"/>
                        <value type="std::string" value="YES"/>
                    </item>
                    <item>
                        <key type="std::string" value="CheckSlateMotroCalibrationState"/>
                        <value type="std::string" value="YES"/>
                    </item>
                    <item>
                        <key type="std::string" value="CheckSlaveVisionResult"/>
                        <value type="std::string" value="YES"/>
                    </item>
                    <item>
                        <key type="std::string" value="SlaveMotorRunningState"/>
                        <value type="std::string" value="RUNNING"/>
                    </item>
                </map>
            </FakeTask>

            <ExclusiveGateway id="checkSlaveCalibrationGateway">
                <list name="SubTasks" type="ExclusiveRule">
                    <ExclusiveRule ExclusiveRuleOperator="=" TaskID="slave_motor_calibration" Value="YES"
                                   Type="String" ValueName="CheckSlateMotroCalibrationState"/>
                    <ExclusiveRule ExclusiveRuleOperator="=" TaskID="slaveMoveToThirdPosition" Value="NO" Type="String"
                                   ValueName="CheckSlateMotroCalibrationState"/>
                </list>
            </ExclusiveGateway>

            <FakeTask id="slaveMoveToThirdPosition" Int="500" NextTaskID="checkMasterVisionResult" Text="slave移动到third点" />

            <SubProcessTask id="slave_motor_calibration" NextTaskID="slaveMoveToThirdPosition">
                <SubTaskManager taskName="slave电机校准子流程">
                    <tasks>
                        <StartTask NextTaskID="slaveMotorMoveToCalibrationPosition" id="slave_motor_calibration_start_task"
                                   name="slave_motor_calibration_start_task"/>
                        <FakeTask id="slaveMotorMoveToCalibrationPosition" Int="500" NextTaskID="startSlaveMotorCalibration" Text="slave移动到校准点" />
                        <FakeTask id="startSlaveMotorCalibration" Int="500" NextTaskID="slaveMotorCalibrationSucee" Text="slave开始校准" >
                            <map keyType="std::string" name="Values" valueType="std::string">
                                <item>
                                    <key type="std::string" value="CheckSlaveCalibrationResult"/>
                                    <value type="std::string" value="YES"/>
                                </item>
                            </map>
                        </FakeTask>
                        <!--结果判断-->
                        <ExclusiveGateway id="checkSlaveCalibrationResultGateway">
                            <list name="SubTasks" type="ExclusiveRule">
                                <ExclusiveRule ExclusiveRuleOperator="=" TaskID="slaveMotorCalibrationSucee" Value="YES"
                                               Type="String" ValueName="CheckSlaveCalibrationResult"/>
                                <ExclusiveRule ExclusiveRuleOperator="=" TaskID="slaveMotorCalibrationFail" Value="NO" Type="String"
                                               ValueName="CheckSlaveCalibrationResult"/>
                            </list>
                        </ExclusiveGateway>
                        <FakeTask id="slaveMotorCalibrationSucee" Int="500" NextTaskID="slave_motor_calibration_end_task" Text="slave校准成功" />
                        <FakeTask id="slaveMotorCalibrationFail" Int="500" NextTaskID="slave_motor_calibration_end_task" Text="slave校准失败" />
                        <EndTask  id="slave_motor_calibration_end_task"
                                  name="slave_motor_calibration_end_task"/>
                    </tasks>
                </SubTaskManager>
            </SubProcessTask>
            <!--判断master的检测结果-->
            <ExclusiveGateway id="checkMasterVisionResult">
                <list name="SubTasks" type="ExclusiveRule">
                    <ExclusiveRule ExclusiveRuleOperator="=" TaskID="slave_side_check_process" Value="YES"
                                   Type="String" ValueName="CheckMasterVisionResult"/>
                    <ExclusiveRule ExclusiveRuleOperator="=" TaskID="slavePickForVisionFail" Value="NO" Type="String"
                                   ValueName="CheckMasterVisionResult"/>
                </list>
            </ExclusiveGateway>

<!--            &lt;!&ndash;slave端面检测流程&ndash;&gt;-->
            <SubProcessTask id="slave_side_check_process" NextTaskID="checkSlaveVisionResult">
                <SubTaskManager taskName="slave端面检测子流程">
                    <tasks>
                        <StartTask NextTaskID="slaveMotorServoCameraFocusInThird" id="slave_side_check_process_start_task"
                                   name="slave_side_check_process_start_task"/>
                        <FakeTask id="slaveMotorServoCameraFocusInThird" Int="500" NextTaskID="slaveMotorTopCameraCaputure" Text="顶面检测伺服对焦" />
                        <FakeTask id="slaveMotorTopCameraCaputure" Int="10" NextTaskID="slaveMotorTopAngleFromVision" Text="顶面相机拍照" />
                        <FakeTask id="slaveMotorTopAngleFromVision" Int="10" NextTaskID="adjustAngle" Text="角度定位计算" />
                        <FakeTask id="adjustAngle" Int="10" NextTaskID="slaveSideServoCameraFocus" Text="角度定位调整" />
                        <FakeTask id="slaveSideServoCameraFocus" Int="10" NextTaskID="slaveMotorSideCameraCaputure" Text="端面相机伺服对焦" />
                        <FakeTask id="slaveMotorSideCameraCaputure" Int="10" NextTaskID="slaveMotorSideVisionProcess" Text="端面相机拍照" />
                        <FakeTask id="slaveMotorSideVisionProcess" Int="10" NextTaskID="slave_side_check_process_end_task" Text="端面视觉检测" />
                        <EndTask  id="slave_side_check_process_end_task"
                                  name="slave_side_check_process_end_task"/>
                    </tasks>
                </SubTaskManager>
            </SubProcessTask>
            <!--判断端面检测结果-->
            <ExclusiveGateway id="checkSlaveVisionResult">
                <list name="SubTasks" type="ExclusiveRule">
                    <ExclusiveRule ExclusiveRuleOperator="=" TaskID="slavePickForVisionSucess" Value="YES"
                                   Type="String" ValueName="CheckSlaveVisionResult"/>
                    <ExclusiveRule ExclusiveRuleOperator="=" TaskID="slavePickForVisionFail" Value="NO" Type="String"
                                   ValueName="CheckSlaveVisionResult"/>
                </list>
            </ExclusiveGateway>


            <FakeTask id="slavePickForVisionSucess" Int = "200" NextTaskID="slaveMoveToVisionSucessPositon" Text="slave视觉检测成功抓取" />
            <FakeTask id="slaveMoveToVisionSucessPositon" NextTaskID="slavePlaceForVisionSucess" Int = "200" Text="移动到视觉检测成功的放置点" />
            <FakeTask id="slavePlaceForVisionSucess" NextTaskID="notifyMasterMotorToMove" Int = "200" Text="视觉检测成功放置" />


            <FakeTask id="slavePickForVisionFail" NextTaskID="slaveMoveToVisionFailPositon" Int = "200" Text="slave视觉检测失败抓取" />
            <FakeTask id="slaveMoveToVisionFailPositon" NextTaskID="slavePlaceForVisionFail"  Int = "200" Text="移动到视觉检测失败的放置点" />
            <FakeTask id="slavePlaceForVisionFail" NextTaskID="notifyMasterMotorToMove" Int = "200" Text="视觉检测失败放置" />
            <FakeTask id="notifyMasterMotorToMove" NextTaskID="slave_motor_end_task" Text="通知master电机开始进入干涉区域" >
                <map keyType="std::string" name="Values" valueType="std::string">
                    <item>
                        <key type="std::string" value="SlaveMotorRunningState"/>
                        <value type="std::string" value="STOP" />
                    </item>
                </map>
            </FakeTask>

            <EndTask id="slave_motor_end_task"
                     name="slave_motor_end_task"/>
        </tasks>

    </TaskManager>

</Process>